apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: grafana
  namespace: argocd
spec:
  project: default
  source:
    repoURL: https://grafana.github.io/helm-charts
    targetRevision: "7.0.5"
    chart: grafana
    helm:
      values: |
        service:
          enabled: true
          type: ClusterIP
          ports:
            - name: http
              port: 80
              targetPort: 3000
            - name: https
              port: 443
              targetPort: 3000

        datasources:
          datasources.yaml:
            apiVersion: 1
            datasources:
            - name: Prometheus
              type: prometheus
              url: http://prometheus-server.observability.svc.cluster.local
              access: proxy
              isDefault: true
            - name: loki
              type: loki
              url: http://logging-loki.observability.svc.cluster.local:3100
              access: proxy

        readinessProbe:
          httpGet:
            path: /api/health
            port: 3000

        livenessProbe:
          httpGet:
            path: /api/health
            port: 3000
          initialDelaySeconds: 60
          timeoutSeconds: 30
          failureThreshold: 10

        securityContext:
          runAsNonRoot: true
          runAsUser: 472
          runAsGroup: 472
          fsGroup: 472

        containerSecurityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
              - ALL
          seccompProfile:
            type: RuntimeDefault

        ingress:
          enabled: true
          ingressClassName: traefik  # Explicitly set the ingress class
          annotations:
            kubernetes.io/ingress.class: "traefik"
            cert-manager.io/cluster-issuer: "letsencrypt-issuer"
            traefik.ingress.kubernetes.io/router.entrypoints: "websecure"
            traefik.ingress.kubernetes.io/router.tls: "true"
          labels: {}
          hosts:
            - grafana.ifarrier.com
          paths:
            - /
          tls:
            - hosts:
                - grafana.ifarrier.com
              secretName: grafana-tls

        persistence:
          enabled: true
          size: 10Gi
        resources:
          requests:
            memory: "500Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"

        admin:
          existingSecret: "grafana-admin-credentials"
          userKey: admin-user
          passwordKey: admin-password

  destination:
    server: https://kubernetes.default.svc
    namespace: observability

  syncPolicy:
    automated:
      prune: true
      selfHeal: true

